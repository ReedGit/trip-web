<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/aop 
                http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
                http://www.springframework.org/schema/tx 
                http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    <!-- 导入外部配置文件 -->
    <context:property-placeholder
        location="classpath:jdbc.properties,classpath:mail.properties" />
    <!-- 配置c3p0数据源 -->
    <!-- 设置destroy-method="close"表示当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用. -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="driverClass" value="${c3p0.driverClass}" />
        <property name="jdbcUrl" value="${c3p0.jdbcUrl}" />
        <property name="user" value="${c3p0.user}" />
        <property name="password" value="${c3p0.password}" />
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}" /> <!-- 设置空闲状态下的连接所能存活的最大时间,单位是秒 -->
    </bean>
    <!-- 配置SessionFactory ,需要依赖数据源,注入dataSource -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
            </props>
        </property>
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.bysj.model" />
        <!-- 配置hibernate配置文件的位置 -->
        <!-- <property name="configLocation" value="classpath:hibernate.cfg.xml" 
            /> -->
    </bean>
    <!-- 配置事物管理 -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <!-- javamail -->
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="defaultEncoding" value="${email.encoding}"></property>
        <property name="host" value="${email.host}"></property>
        <property name="username" value="${email.username}"></property>
        <property name="password" value="${email.password}"></property>
        <property name="protocol" value="${email.protocal}"></property>
        <property name="javaMailProperties">
            <props>
                <!-- 让服务器检验用户密码是否正确 -->
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.timeout">25000</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>
</beans>
